plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'io.gitlab.arturbosch.detekt'
}

android {
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId "com.iresetic.weatherreport"
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility source_compatibility_version
        targetCompatibility target_compatibility_version
    }
    kotlinOptions {
        jvmTarget = kotlin_jvm_target_version
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // ***** Core dependencies ***** //
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.datastore:datastore-preferences:$datastore_preferences_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espress_core_version"

    // ***** Jetpack Compose ***** //
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.material:material:1.3.0"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.navigation:navigation-compose:$navigation_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // ***** Hilt DI ***** //
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // ***** Timber logging library ***** //
    implementation "com.jakewharton.timber:timber:$timber_version"

    // ***** Splashscreen API ***** //
    implementation "androidx.core:core-splashscreen:$splashscreen_version"

    // ***** Coroutines ***** //
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_play_services_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // ***** Room persistence library ***** //
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // ***** Retrofit ***** //
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    // ***** Moshi ***** //
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // ***** Mockito unit test ***** //
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"

    // ***** Kotlin style checks ***** //
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version"
}

kapt {
    correctErrorTypes true
}